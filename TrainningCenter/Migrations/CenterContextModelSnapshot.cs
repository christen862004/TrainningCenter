// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainningCenter.Models;

#nullable disable

namespace TrainningCenter.Migrations
{
    [DbContext(typeof(CenterContext))]
    partial class CenterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrainningCenter.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DeptartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptartmentId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 100,
                            DeptartmentId = 1,
                            Hours = 60,
                            MinDegree = 50,
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Degree = 100,
                            DeptartmentId = 2,
                            Hours = 60,
                            MinDegree = 50,
                            Name = "PHP"
                        },
                        new
                        {
                            Id = 3,
                            Degree = 100,
                            DeptartmentId = 3,
                            Hours = 60,
                            MinDegree = 50,
                            Name = "Angular"
                        });
                });

            modelBuilder.Entity("TrainningCenter.Models.CourseResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TraineeDegree")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("CourseResult");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            TraineeDegree = 40,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            TraineeDegree = 80,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            TraineeDegree = 40,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            TraineeDegree = 90,
                            TraineeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            TraineeDegree = 80,
                            TraineeId = 1
                        });
                });

            modelBuilder.Entity("TrainningCenter.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManagerName = "Ahmed",
                            Name = ".Net"
                        },
                        new
                        {
                            Id = 2,
                            ManagerName = "Abdallah",
                            Name = "OS"
                        },
                        new
                        {
                            Id = 3,
                            ManagerName = "Faysal",
                            Name = "FrontEnd"
                        });
                });

            modelBuilder.Entity("TrainningCenter.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DeptartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DeptartmentId");

                    b.ToTable("Instructor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Alex",
                            CourseId = 1,
                            DeptartmentId = 1,
                            ImageURL = "2.jpg",
                            Name = "Asmaa",
                            Salary = 60000
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alex",
                            CourseId = 2,
                            DeptartmentId = 2,
                            ImageURL = "m.png",
                            Name = "Ester",
                            Salary = 50000
                        },
                        new
                        {
                            Id = 3,
                            Address = "Alex",
                            CourseId = 3,
                            DeptartmentId = 3,
                            ImageURL = "m.png",
                            Name = "Omar",
                            Salary = 20000
                        },
                        new
                        {
                            Id = 4,
                            Address = "Alex",
                            CourseId = 1,
                            DeptartmentId = 1,
                            ImageURL = "2.jpg",
                            Name = "Heba",
                            Salary = 30000
                        });
                });

            modelBuilder.Entity("TrainningCenter.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptartmentId");

                    b.ToTable("Trainee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Alex",
                            DeptartmentId = 1,
                            ImageURL = "m.png",
                            Name = "Karem"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alex",
                            DeptartmentId = 2,
                            ImageURL = "m.png",
                            Name = "MOhsen"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Alex",
                            DeptartmentId = 3,
                            ImageURL = "2.jpg",
                            Name = "Mona"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Alex",
                            DeptartmentId = 1,
                            ImageURL = "2.jpg",
                            Name = "Fatma"
                        });
                });

            modelBuilder.Entity("TrainningCenter.Models.Course", b =>
                {
                    b.HasOne("TrainningCenter.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DeptartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainningCenter.Models.CourseResult", b =>
                {
                    b.HasOne("TrainningCenter.Models.Course", "Course")
                        .WithMany("CoursesResults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainningCenter.Models.Trainee", "Trainee")
                        .WithMany("CoursesResults")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("TrainningCenter.Models.Instructor", b =>
                {
                    b.HasOne("TrainningCenter.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainningCenter.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DeptartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainningCenter.Models.Trainee", b =>
                {
                    b.HasOne("TrainningCenter.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DeptartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TrainningCenter.Models.Course", b =>
                {
                    b.Navigation("CoursesResults");
                });

            modelBuilder.Entity("TrainningCenter.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("TrainningCenter.Models.Trainee", b =>
                {
                    b.Navigation("CoursesResults");
                });
#pragma warning restore 612, 618
        }
    }
}
